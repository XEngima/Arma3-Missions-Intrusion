/*
 * Name:	OrderQueueTests
 * Date:	2018-11-19
 * Version: 1.0
 * Author:  Engima
 *
 * Description:
 * Tests for the OrderQueue object.
 */

using Sqx.UnitTest;
using Tests;
using Tests.Helpers.Server;
using Intrusion.Server;

namespace Tests.Server
{
	public class ProductionManagerTests
	{
		#region Fields
		
		private static fields [
			"_mVehicleSpawner" as TestVehicleSpawner, 
			"_mOrderQueue" as OrderQueue, 
			"_mGroup" as Group, 
			"_mResourceBook" as ResourceBook, 
			"_mProductionManager" as ProductionManager];
		
		#endregion
		
		// Creates a OrderQueueTests object.
		public static method Init {
			["Tests.Server", "ProductionManagerTests", [
				"ItemToProduce_CroupCanAfford_ItemProduced",
				"ItemToProduce_CroupCanNotAfford_ItemNotProduced"
			]] call TestEngine.Register;
		};
		
		// Creates a production manager, and gives it a resource book with 1000 productions.
		private static method BeforeEach {
			_mVehicleSpawner = new TestVehicleSpawner;
			_mOrderQueue = new OrderQueue;
			_mResourceBook = new ResourceBook;
			_mProductionManager = [west, _mVehicleSpawner, _mResourceBook] new ProductionManager;
			
			_mGroup = call TestActions.CreatePopulatedGroup;
		};
		
		private static method AfterEach {
			[_mGroup] call TestActions.DeletePopulatedGroup;
		};
		
		private static method ItemToProduce_CroupCanAfford_ItemProduced {
			private ["_order" as Order];
		
			// Arrange
			_order = [_mGroup, "", 1000] new Order;
			[_order] call _mOrderQueue.PutOrder;
			[1000] call _mResourceBook.DepositProduction;
			
			// Act
			call _mProductionManager.Produce;
			
			// Assert
			[1, count _mVehicleSpawner.SpawnedVehicles, "No vehicle spawned."] call Assert.AreEqual;
		};		
		
		private static method ItemToProduce_CroupCanNotAfford_ItemNotProduced {
			private ["_order" as Order];
		
			// Arrange
			_order = [_mGroup, "", 1000] new Order;
			[_order] call _mOrderQueue.PutOrder;
			[100] call _mResourceBook.DepositProduction;
			
			// Act
			call _mProductionManager.Produce;
			
			// Assert
			[0, count _mVehicleSpawner.SpawnedVehicles, "No vehicle spawned."] call Assert.AreEqual;
		};		
	};
};
