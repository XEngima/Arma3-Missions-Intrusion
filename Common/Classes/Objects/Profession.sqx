/*
 * Name:    Profession
 * Version: 1.0
 * Author:  Engima
 *
 * Description:
 * Class that models a profession and its meta data.
 */
namespace Intrusion.Common
{
	public class Profession
	{
        // Creates a Profession object.
        public constructor(
    		"_type" as ProfessionType,
    		"_name" as String,
    		"_requiredTechnology" as Technology,
    		"_requiredRank" as Rank,
    		"_maxGroupsCount" as Scalar,
    		"_minGroupSize" as Scalar,
    		"_maxGroupSize" as Scalar,
    		"_maxUnitsPerVehicle" as Scalar,
    		"_manRevealsProfessionType" as Boolean,
    		"_vehicleRevealsProfessionType" as Boolean,
    		"_markerTypeFriendly" as String,
    		"_markerTypeEnemy" as String,
    		"_allowedToTransport" as Boolean)
        {
        	_self.Type = _type;
        	_self.Name = _name;
        	_self.RequiredTechnology = _requiredTechnology;
        	_self.RequiredRank = _requiredRank;
        	_self.MaxGroupsCount = _maxGroupsCount;
        	_self.MinGroupSize = _minGroupSize;
        	_self.MaxGroupSize = _maxGroupSize;
        	_self.MaxUnitsPerVehicle = _maxUnitsPerVehicle;
        	_self.ManRevealsProfessionType = _manRevealsProfessionType;
        	_self.VehicleRevealsProfessionType = _vehicleRevealsProfessionType;
        	_self.MarkerTypeFriendly = _markerTypeFriendly;
        	_self.MarkerTypeEnemy = _markerTypeEnemy;
        	_self.AllowedToTransport = _allowedToTransport;
		};
		
		// Gets the spezialization type.
		public property ProfessionType Type { get; private set; };
		
		// Gets the name of the profession.
		public property String Name { get; private set; };
		
		// Gets the required technology for this profession vehicle.
		public property Technology RequiredTechnology { get; private set; };
		
		// Gets the required rank to be able to select this profession.
		public property Rank RequiredRank { get; private set; };

		// Gets the maximum number of group that can have this profession on a side. -1 means unlimited.
		public property Scalar MaxGroupsCount { get; private set; };
		
		// Gets the minimum number of players in a group with this profession.
		public property Scalar MinGroupSize { get; private set; };
		
		// Gets the maximum number of players in a group with this profession.
		public property Scalar MaxGroupSize { get; private set; };
		
		// Gets the maximum units that fits into one vehicle. Then one more will be spawned. 0 = infinite.
		public property Scalar MaxUnitsPerVehicle { get; private set; };
		
		// Gets whether the man itself, without his vehicle, reveals the profession type on sight.
		public property Boolean ManRevealsProfessionType { get; private set; };
		
		// Gets whether the vehicle reveals the profession type on sight.
		public property Boolean VehicleRevealsProfessionType { get; private set; };
		
		// Gets the friendly marker type associated with the profession.
		public property String MarkerTypeFriendly { get; private set; };
		
		// Gets the enemy marker type associated with the profession.
		public property String MarkerTypeEnemy { get; private set; };
		
		// Gets whether this profession is allowed to transport other groups with their profession vehicle.
		public property Boolean AllowedToTransport { get; private set; };
	};
};
