/*
 * Name:	DisplayHandler
 * Date:	2019-02-14
 * Version: 1.0
 * Author:  Engima
 *
 * Description:
 * Handles all display texts shown on the player's screen.
 */

using Intrusion.Common;

namespace Intrusion.Client
{
	public class DisplayHandler
	{
		private fields ["_mBrigadeInfoCtrl" as Control, "_mTechnologyConfig" as ITechnologyConfig];
		
		// Creates a DisplayHandler object.
		public constructor("_technologyConfig" as ITechnologyConfig) {
			_mTechnologyConfig = _technologyConfig;
			_mBrigadeInfoCtrl = controlNull;
		};
		
		public method DisplayResourceReport("_report" as ResourceReport)
		{
			private ["_technologyInfo" as TechnologyInfo, "_text" as String, "_playerText" as String];
			private ["_ratingReduction" as RatingReduction];
			
			waitUntil {!isNull findDisplay 46};
			disableSerialization;
			
			if (isNull _mBrigadeInfoCtrl) then {
				_mBrigadeInfoCtrl = findDisplay 46 ctrlCreate ["RscStructuredText", -1];
				_mBrigadeInfoCtrl ctrlSetPosition [safeZoneX, safeZoneY, safeZoneW, safeZoneH];
				_mBrigadeInfoCtrl ctrlCommit 0;
			};

			_technologyInfo = [_report.Administration] call _mTechnologyConfig.GetNextTechnology;
			
			_text = "Production: " + str floor _report.Production;
			
			if (_report.NextVehicleGroup == group player) then {
				_text = _text + " (Vehicle at " + str _report.NextVehicleCost + ")";
			};
			
			_text = _text + ", Administration: " + str floor _report.Administration + " ";
			
			if (isNull _technologyInfo) then {
				_text = _text + "(all done)";
			}
			else {
				_text = _text + "(" + _technologyInfo.Name + " at " + str _technologyInfo.RequiredAdministration + ")";
			};
			
			_playerText = "Rank: " + ([ClientState.CurrentRank] call RankMeta.GetRankText);
			
			if (ClientState.CurrentRank != Rank.Colonel) then {
				private _nextRank = [rating player] call RankMeta.GetNextRank;
				
				if (_nextRank != Rank.Private) then {
					_playerText = _playerText + " (" + str rating player + "/" + str (_nextRank as Scalar) + ")";
				}
				else {
					_playerText = _playerText + " (" + str rating player + ")";
				};
			};
		
			_ratingReduction = ClientState.RatingReduction;
			if (!isNull _ratingReduction) then {
				_playerText = _playerText + " Reduced - " + _ratingReduction.ReasonText;
			};
			
			_mBrigadeInfoCtrl ctrlSetStructuredText parseText format[
				"<t color='#ffffff' align='left' size='1.2'>" + _text + ", " + _playerText + "</t>";
			];
/*
			if (!isNull _technologyInfo) then {
				_mBrigadeInfoCtrl ctrlSetStructuredText parseText format[
					"<t color='#ffffff' align='left' size='1.4'> Production: %1, Administration: %2 (%3 at %4)</t>",
					str floor _report.Production, str floor _report.Administration, _technologyInfo.Name, str _technologyInfo.RequiredAdministration;
				];
			}
			else {
				_mBrigadeInfoCtrl ctrlSetStructuredText parseText format[
					"<t color='#ffffff' align='left' size='1.4'> Production: %1, Administration: %2 (all done)</t>",
					str floor _report.Production, str floor _report.Administration;
				];
			};
*/
		};
	};
};
