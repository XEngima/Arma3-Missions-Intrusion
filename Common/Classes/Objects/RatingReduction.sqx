/*
 * Name:	RatingReduction
 * Date:	2019-04-05
 * Version: 1.0
 * Author:  Engima
 *
 * Description:
 * Models a reduced rating increase for a player.
 */
namespace Intrusion.Common
{
	public class RatingReduction
	{
		private fields ["_mMissionTime" as IMissionTime];
	
		// Creates a RatingReduction object.
		public constructor("_reducedUntilTime" as Scalar, "_reason" as RatingReducedReason) {
			_mMissionTime = new MissionTime;
			_self.ReducedUntilTime = _reducedUntilTime;
			_self.Reason = _reason;
			
			switch (_reason) do {
				case RatingReducedReason.GroupIsSplit: { _self.ReasonText = "Group members too far apart"; };
				case RatingReducedReason.LostVehicle: { _self.ReasonText = "Group lost vehicle"; };
				case RatingReducedReason.Respawn: { _self.ReasonText = "Group member respawned"; };
				case RatingReducedReason.TeamKill: { _self.ReasonText = "Group member team killed"; };
			};
		};
		
		// Gets the time when the player's rating reduction is released.
		public property Scalar ReducedUntilTime { get; private set; };
		
		// Gets the reason for the rating reduction.
		public property RatingReducedReason Reason { get; private set; };
		
		public property String ReasonText { get; private set; };
		
		// Gets whether the rating reduction is active or not.
		public method Boolean IsActive()
		{
			(call _mMissionTime.GetMissionTime) < _self.ReducedUntilTime
		};
	};
};
