/*
 * Name:	MapMarkerService
 * Date:	2018-12-16
 * Version: 1.0
 * Author:  Engima
 *
 * Description:
 * Updates the player's map with map markers (observations not included).
 */

using Intrusion.Common;
using Sqx.Markers;

namespace Intrusion.Client
{
	public class MapMarkerService
	{
		private static fields ["_mMapMarkers" as Array /* of Marker */, "_mCurrentId" as Scalar];
		
		// Initializes the observation service.
		public static method Init {
			_mCurrentId = 0;
			_mMapMarkers = [];
		};
		
        // Runs the service.
        private static method Run {
        	private ["_squadCollection" as SquadCollection, "_squad" as Squad, "_leader" as Object, "_profession" as Profession, "_marker" as Marker];
        
        	waitUntil { call PublicVariableHandler.SquadsHasValue };
        	
        	while { true } do {
    			_squadCollection = call PublicVariableHandler.GetSquads;
    			
        		{
        			_x params ["_group" as Group];
        			
        			_squad = [_group] call _squadCollection.GetSquadByGroup;
        			
        			if (!isNull _squad) then {
        				_leader = leader _squad.Group;
        				
        				if (!isNull _leader) then {
        					_profession = [_squad.ProfessionType] call ProfessionConfig.GetProfession;
        					_marker = [getPos _leader, _profession.MarkerTypeFriendly] call Marker.CreateIconMarkerLocal;
        					_marker.Tag = _squad.Group;
        				};
        			};
        			
        		} foreach allGroups as Group;
        		
        		sleep 1;
        	};
		};
		
		// Starts the service
		public static method RunAsync {
			[] spawn _self.Run;
		};
	};
};
