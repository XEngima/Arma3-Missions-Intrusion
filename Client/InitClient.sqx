call compile preprocessFileLineNumbers "Client\Classes\Configs\TutorialConfig.sqx";
call compile preprocessFileLineNumbers "Client\Classes\Configs\SquadMarkersConfig.sqx";
call compile preprocessFileLineNumbers "Client\Classes\Configs\OrderMarkersConfig.sqx";
call compile preprocessFileLineNumbers "Client\Classes\Objects\Tutorial.sqx";
call compile preprocessFileLineNumbers "Client\Classes\Dialogs\TutorialDialog.sqx";
call compile preprocessFileLineNumbers "Client\Classes\Dialogs\ProfessionDialog.sqx";
call compile preprocessFileLineNumbers "Client\Classes\Dialogs\MoveBaseDialog.sqx";
call compile preprocessFileLineNumbers "Client\Classes\Dialogs\OrderDialog.sqx";
call compile preprocessFileLineNumbers "Client\Classes\Handlers\TutorialHandler.sqx";
call compile preprocessFileLineNumbers "Client\Classes\Handlers\BriefingHandler.sqx";
call compile preprocessFileLineNumbers "Client\Classes\Handlers\GroupActionHandler.sqx";
call compile preprocessFileLineNumbers "Client\Classes\Handlers\ClientMessageHandler.sqx";
call compile preprocessFileLineNumbers "Client\Classes\Handlers\IntrusionMenuHandler.sqx";
call compile preprocessFileLineNumbers "Client\Classes\Handlers\ClientResourceLocationHandler.sqx";
call compile preprocessFileLineNumbers "Client\Classes\Handlers\ClientSquadHandler.sqx";
call compile preprocessFileLineNumbers "Client\Classes\Handlers\MapObservationsHandler.sqx";
call compile preprocessFileLineNumbers "Client\Classes\Handlers\MissionEndHandler.sqx";
call compile preprocessFileLineNumbers "Client\Classes\Handlers\RadioTriggerHandler.sqx";
call compile preprocessFileLineNumbers "Client\Classes\Handlers\ClientVehicleHandler.sqx";
call compile preprocessFileLineNumbers "Client\Classes\Handlers\ClientState.sqx";
call compile preprocessFileLineNumbers "Client\Classes\Handlers\MoveBaseHandler.sqx";
call compile preprocessFileLineNumbers "Client\Classes\Handlers\TeleportHandler.sqx";
call compile preprocessFileLineNumbers "Client\Classes\Handlers\DisplayHandler.sqx";
call compile preprocessFileLineNumbers "Client\Classes\Handlers\ClientEventHandlers.sqx";
call compile preprocessFileLineNumbers "Client\Classes\Handlers\TaskHandler.sqx";
call compile preprocessFileLineNumbers "Client\Classes\Recievers\ClientEventReciever.sqx";
call compile preprocessFileLineNumbers "Client\Classes\Services\MapMarkerService.sqx";
call compile preprocessFileLineNumbers "Client\Classes\Services\JipService.sqx";
call compile preprocessFileLineNumbers "Client\Classes\Services\PrisonService.sqx";
call compile preprocessFileLineNumbers "Client\Classes\Services\GiveOrderService.sqx";
call compile preprocessFileLineNumbers "Client\Classes\Services\RatingService.sqx";
call compile preprocessFileLineNumbers "Client\Classes\IntrusionClient.sqx";

using Intrusion.Client;
using Intrusion.Common;

cutText ["", "BLACK FADED"];

waitUntil { player == player };

// Configs
call TutorialConfig.Init;

// Recievers
[gCommon.UniformHandler] call ClientEventReciever.Init;

// Handlers
call ClientEventHandlers.Init;
call ClientState.Init;
call TutorialHandler.Init;
call RadioTriggerHandler.Init;
call IntrusionMenuHandler.Init; // Adds the intrusion menu
call ClientResourceLocationHandler.Init; // Initialize actions on all flags
[gCommonConfig.Professions] call MapObservationsHandler.Init;
[gCommonConfig.Professions] call ClientSquadHandler.Init;
[gCommonConfig.Professions] call GroupActionHandler.Init;

// Initialize the intrusion client object
gClient = [gCommonConfig.BaseConfig] new IntrusionClient;

// Services
[gCommonConfig.MapMarkers, gCommonConfig.Professions, gClient.SquadMarkersConfig, gCommonConfig.SupportServicesConfig] call MapMarkerService.Init;

// Dialogs
[gCommonConfig.Professions, gCommonConfig.Technology, gCommonConfig.VehicleClassNames, gCommonConfig.ProfessionVehicles] call ProfessionDialog.Init;
call MoveBaseDialog.Init;

// Create the briefing
call BriefingHandler.CreateBriefing;

// Add invite player actions on all possible players
call GroupActionHandler.UpdateAllInvitePlayerActions;

// Start the map marker service
call MapMarkerService.RunAsync;
call gClient.RatingService.RunAsync;
