/*
 * Name:	VehicleClassNamesConfig
 * Date:	2017-11-20
 * Version: 1.0
 * Author:  Engima
 *
 * Description:
 * A configuration class that handles all vehicle types (class names) in the mission.
 */
namespace Intrusion.Common
{
	public class VehicleClassNamesConfig : IVehicleClassNamesConfig
	{
		private fields ["_mClassNamesInfos" as Array];
	
		// Creates a VehicleClassNamesConfig object.
		public constructor {
			private _westFreeVehicleCarTypes = ["B_MRAP_01_F", "B_Quadbike_01_F"];
			private _westTransportCarTypes = ["B_Truck_01_transport_F", "B_Truck_01_covered_F"];
			private _westFuelCarTypes = ["B_Truck_01_fuel_F"];
			private _westAmmoCarTypes = ["B_Truck_01_ammo_F"];
			private _westRepairCarTypes = ["B_Truck_01_Repair_F"];
			private _westMotorizedVehicleTypes = ["B_MRAP_01_gmg_F", "B_MRAP_01_hmg_F"];
			private _westMortarsVehicleTypes = ["B_MRAP_01_F"];
			private _westSniperVehicleTypes = ["B_Quadbike_01_F"];
			private _westAntiArmorVehicleTypes = ["B_MRAP_01_F"];
			private _westMechanizedVehicleTypes = ["B_APC_Wheeled_01_cannon_F", "B_APC_Tracked_01_rcws_F", "B_APC_Tracked_01_CRV_F"];
			private _westArmorVehicleTypes = ["B_APC_Tracked_01_AA_F", "B_MBT_01_cannon_F"];

			private _eastFreeVehicleCarTypes = ["O_MRAP_02_F", "O_Quadbike_01_F"];
			private _eastTransportCarTypes = ["O_Truck_02_transport_F", "O_Truck_02_covered_F"];
			private _eastFuelCarTypes = ["O_Truck_02_fuel_F"];
			private _eastAmmoCarTypes = ["O_Truck_03_ammo_F"];
			private _eastRepairCarTypes = ["O_Truck_02_box_F"];
			private _eastMotorizedVehicleTypes = ["O_MRAP_02_gmg_F", "O_MRAP_02_hmg_F"];
			private _eastMortarsVehicleTypes = ["O_MRAP_02_F"];
			private _eastSniperVehicleTypes = ["O_Quadbike_01_F"];
			private _eastAntiArmorVehicleTypes = ["O_MRAP_02_F"];
			private _eastMechanizedVehicleTypes = ["O_APC_Tracked_02_cannon_F", "O_APC_Wheeled_02_rcws_F"];
			private _eastArmorVehicleTypes = ["O_MBT_02_cannon_F", "O_APC_Tracked_02_AA_F"];
			
			private _westSniperVehicleSpawnCode = {
				params ["_veh" as Object, "_group" as Group];
				private "_crate" as Object;
				
				_crate = "Box_NATO_Wps_F" createVehicle (getPos _veh);
				clearWeaponCargoGlobal _crate;
				clearItemCargoGlobal _crate;
				clearMagazineCargoGlobal _crate;
				_crate attachTo [_veh, [0,0.85,-0.40]];
				_crate addbackpackcargoGlobal ["B_UAV_01_backpack_F", 4];
				_crate addItemCargoGlobal ["B_UavTerminal", 2];
				_crate setVariable ["RestrictedTo", [ProfessionType.Sniper], true];
				
				// When vehicle explodes, destroy ammo box
				_veh addEventHandler ["Killed", {
					params ["_veh"];
					if (!canMove _veh) then {
						systemChat "Veh killed";
						_veh removeEventHandler ["Killed", _thisEventHandler];
						{
							[_x] spawn {
								params["_obj"];
								_obj setDamage 1;
								sleep 3;
								deleteVehicle _obj;
							};
						} forEach attachedObjects _veh;
					};
				}];
				
				// When vehicle is removed, remove ammo box
				_veh addEventHandler ["Deleted", {
					params ["_veh"];
					systemChat "ToBeDeleted";
					{
						deleteVehicle _x;
					} forEach attachedObjects _veh
				}];
				
			};
			
			private _eastSniperVehicleSpawnCode = {
				params ["_veh" as Object, "_group" as Group];
				private "_crate" as Object;
				
				_crate = "Box_East_Wps_F" createVehicle (getPos _veh);
				clearWeaponCargoGlobal _crate;
				clearItemCargoGlobal _crate;
				clearMagazineCargoGlobal _crate;				
				_crate attachTo [_veh, [0,0.85,-0.40]];
				_crate addbackpackcargoGlobal ["O_UAV_01_backpack_F", 4];
				_crate addItemCargoGlobal ["O_UavTerminal", 2];
				_crate setVariable ["RestrictedTo", [ProfessionType.Sniper], true];
				
				// When vehicle explodes, destroy ammo box
				_veh addEventHandler ["Killed", {
					params ["_veh"];
					if (!canMove _veh) then {
						systemChat "Veh killed";
						_veh removeEventHandler ["Killed", _thisEventHandler];
						{
							[_x] spawn {
								params["_obj"];
								_obj setDamage 1;
								sleep 3;
								deleteVehicle _obj;
							};
						} forEach attachedObjects _veh;
					};
				}];
				
				// When vehicle is removed, remove ammo box
				_veh addEventHandler ["Deleted", {
					params ["_veh"];
					systemChat "ToBeDeleted";
					{
						deleteVehicle _x;
					} forEach attachedObjects _veh
				}];
			};
			
			_mClassNamesInfos = [
				[west, ProfessionType.Undefined, _westFreeVehicleCarTypes, []] new ProfessionVehicleClassNamesInfo,
				[west, ProfessionType.Transport, _westTransportCarTypes, []] new ProfessionVehicleClassNamesInfo,
				[west, ProfessionType.Fuel, _westFuelCarTypes, []] new ProfessionVehicleClassNamesInfo,
				[west, ProfessionType.Ammo, _westAmmoCarTypes, []] new ProfessionVehicleClassNamesInfo,
				[west, ProfessionType.Repair, _westRepairCarTypes, []] new ProfessionVehicleClassNamesInfo,
				[west, ProfessionType.Motorized, _westMotorizedVehicleTypes, []] new ProfessionVehicleClassNamesInfo,
				[west, ProfessionType.Mortars, _westMortarsVehicleTypes, ["B_Mortar_01_support_F", "B_Mortar_01_weapon_F"]] new ProfessionVehicleClassNamesInfo,
				[west, ProfessionType.Sniper, _westSniperVehicleTypes, [], _westSniperVehicleSpawnCode] new ProfessionVehicleClassNamesInfo,
				[west, ProfessionType.AntiArmor, _westAntiArmorVehicleTypes, ["B_AT_01_weapon_F", "B_HMG_01_support_F"]] new ProfessionVehicleClassNamesInfo,
				[west, ProfessionType.Mechanized, _westMechanizedVehicleTypes, []] new ProfessionVehicleClassNamesInfo,
				[west, ProfessionType.Armored, _westArmorVehicleTypes, []] new ProfessionVehicleClassNamesInfo,
				
				[east, ProfessionType.Undefined, _eastFreeVehicleCarTypes, []] new ProfessionVehicleClassNamesInfo,
				[east, ProfessionType.Transport, _eastTransportCarTypes, []] new ProfessionVehicleClassNamesInfo,
				[east, ProfessionType.Fuel, _eastFuelCarTypes, []] new ProfessionVehicleClassNamesInfo,
				[east, ProfessionType.Ammo, _eastAmmoCarTypes, []] new ProfessionVehicleClassNamesInfo,
				[east, ProfessionType.Repair, _eastRepairCarTypes, []] new ProfessionVehicleClassNamesInfo,
				[east, ProfessionType.Motorized, _eastMotorizedVehicleTypes, []] new ProfessionVehicleClassNamesInfo,
				[east, ProfessionType.Mortars, _eastMortarsVehicleTypes, ["O_Mortar_01_support_F", "O_Mortar_01_weapon_F"]] new ProfessionVehicleClassNamesInfo,
				[east, ProfessionType.Sniper, _eastSniperVehicleTypes, [], _eastSniperVehicleSpawnCode] new ProfessionVehicleClassNamesInfo,
				[east, ProfessionType.AntiArmor, _eastAntiArmorVehicleTypes, ["O_AT_01_weapon_F", "O_HMG_01_support_F"]] new ProfessionVehicleClassNamesInfo,
				[east, ProfessionType.Mechanized, _eastMechanizedVehicleTypes, []] new ProfessionVehicleClassNamesInfo,
				[east, ProfessionType.Armored, _eastArmorVehicleTypes, []] new ProfessionVehicleClassNamesInfo,
			];
		};
		
		// Gets the vehicle class names by side and profession type.
		// _side (Side): Side.
		// _professionType (ProfessionType): Profession type.
		// Returns (Array): An array with vehicle class names. An empty array if no class names were found.
		public method ProfessionVehicleClassNamesInfo GetProVehiclesClassNameInfo("_side" as Side, "_professionType" as ProfessionType)
		{
			scopeName "main";
			
			{
				if (_x.Side == _side && _x.ProfessionType == _professionType) then {
					_x breakOut "main";
				};
			} foreach _mClassNamesInfos as ProfessionVehicleClassNamesInfo;
			
			classNull
		};
	};
};
