/*
 * Name:	RatingService
 * Date:	2019-04-05
 * Version: 1.0
 * Author:  Engima
 *
 * Description:
 * A service checking status for squad rating.
 */

using Sqx.Services;
using Intrusion.Common;

namespace Intrusion.Client
{
	public class RatingService : Service
	{
		private fields ["_mSquadConfig" as ISquadConfig, "_mMissionTime" as IMissionTime];
	
		// Creates a RatingService object.
		public constructor("_squadConfig" as ISquadConfig, "_missionTime" as IMissionTime)
		{
			call _base.Constructor;
			
			_mSquadConfig = _squadConfig;
			_mMissionTime = _missionTime;
		};
		
		protected override method Run()
		{
			private ["_okDistances" as Boolean, "_ratingReduction" as RatingReduction];
			
			while { true } do
			{
				_ratingReduction = ClientState.RatingReduction;
				
				if (isNull _ratingReduction || { !(call _ratingReduction.IsActive) || _ratingReduction.Reason == RatingReducedReason.GroupIsSplit }) then
				{
					_okDistances = true;
					
					{
						if (vehicle _x distance vehicle leader group player > _mSquadConfig.RatingSquadLeaderMaxDistance) then {
							_okDistances = false;
						};
					} foreach units group player;
						
					if (_okDistances) then {
						ClientState.RatingReduction = classNull;
					}
					else {
						ClientState.RatingReduction = [(call _mMissionTime.GetMissionTime) + 5 * 60, RatingReducedReason.GroupIsSplit] new RatingReduction;
					};
				};
				
				sleep 5;
			};
			
			call _base.Run;
		};
	};
};
