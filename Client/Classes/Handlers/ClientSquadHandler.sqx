/*
 * Name:	ClientSquadHandler
 * Date:	2017-12-01
 * Version: 1.0
 * Author:  Engima
 *
 * Description:
 * Handles all about squads on the client.
 */

using Intrusion.Common;

namespace Intrusion.Client
{
	public class ClientSquadHandler
	{
		private static fields ["_mProfessionConfig" as IProfessionConfig];
	
		public static method Init("_professionConfig" as IProfessionConfig)
		{
			_mProfessionConfig = _professionConfig;
		};
	
		// Notifies the player that his/her profession has changed.
		// Called when any group's profession has changed.
		// _group (Group): The group that has changed profession.
		// _professionType (ProfessionType): The new profession type.
		public static method OnGroupProfessionChanged("_group" as Group, "_professionType" as ProfessionType)
		{
			if (_group == group player) then {
				call ProfessionDialog.CloseDialog;
				["Your group now belongs to the brigade's " + ([_professionType] call _mProfessionConfig.GetProfession).Name] call ClientMessageHandler.ShowMessage;
			};
		};
		
		// Notifies the player that his/her profession could not be changed.
		// Called when any group's profession did not change as desired.
		// _group (Group): The group that tried to change profession.
		// _reason (String): The reason that the group profession was now changed.
		public static method OnGroupProfessionChangeRejected("_group" as Group, "_reason" as String)
		{
			if (_group == group player) then {
				[_reason] call ClientMessageHandler.ShowMessage;
			};
		};
		
		// Adds rating to all members of a squad.
		// _rating (Scalar): The amout of rating to add for a one person group. More for larger groups.
		// _group (Group): The squad/group to add rating to.
		public static method AddSquadRating("_rating" as Scalar, "_group" as Group)
		{
//			private ["_calculatedRating" as Scalar];
			private ["_ratingLock" as RatingLock];
			
			if (_group == group player) then
			{
				_ratingLock = ClientState.RatingLock;
			
				if (isNull _ratingLock || { !(call _ratingLock.IsActive) }) then
				{
//					_calculatedRating = (_rating * (count units _group + 1) * 0.5);
	
//					if (_calculatedRating < 0) then {
//						_calculatedRating = 0;
//					};
					
//					player addRating _calculatedRating;
					player addRating _rating;
					ClientState.CurrentRank = ([rating player] call RankMeta.GetRankByRating);
				};
			};
		};
		
		// Change unit uniform.
		// _unit (Object): The unit to change dress on.
		// _role (String): Role in vehicle.
		// _vehicle (Object): The vehicle that the unit entered.
		public static method SetUniform(
			"_unit" as Object,
			"_role" as String,
			"_vehicle" as IntrusionVehicle)
		{
			private ["_professionType" as ProfessionType, "_uniformItems" as Array, "_uniformInfo" as UniformInfo];
			_professionType = _vehicle.OwnerProfession;
			_uniformItems = uniformItems _unit;
			
			_uniformInfo = [side _unit, _professionType, [_role] call VehicleRoleMeta.fromString] call gCommon.UniformConfig.GetUniformInfo;
			_unit addUniform _uniformInfo.Uniform;
			_unit addHeadgear _uniformInfo.Helmet;
			
			// Restore items/magazines etc to this units new uniform
			{
				_unit addItemToUniform _x;
			} forEach _uniformItems;
		};
	};
};
