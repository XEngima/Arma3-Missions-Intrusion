/*
 * Name:	PrisonHandler
 * Date:	2019-02-15
 * Version: 1.0
 * Author:  Engima
 *
 * Description:
 * Handles all about inprisonment of players.
 */

using Intrusion.Common;

namespace Intrusion.Client
{
	public class PrisonHandler
	{
		private fields ["_mPrisonService" as PrisonService, "_mCountTimes" as Scalar];
		
		// Creates a PrisonHandler object.
		public constructor("_mapMarkersConfig" as IMapMarkersConfig) {
			_mPrisonService = [_mapMarkersConfig] new PrisonService;
			_mCountTimes = 0;
		};
		
		// Imprisions the local player.
		public method InprisonPlayer()
		{
			private ["_imprisonmentTime" as Scalar, "_message" as String];
			
			_imprisonmentTime = 1;
			_message = "You have to spend one minute in team kill prison. If you team kill again, then next time you will spend ten minutes.";
			if (_mCountTimes > 0) then {
				_imprisonmentTime = 10;
				_message = "You have to spend ten minutes in team kill prison.";
			};
		
			if (!_mPrisonService.IsRunning) then {
				[_imprisonmentTime] call _mPrisonService.SetImprisonmentTime;
				[_message] call _mPrisonService.SetPrisonMessage;
				_mCountTimes = _mCountTimes + 1;
				call _mPrisonService.RunAsync;
			};
		};
	};
};
