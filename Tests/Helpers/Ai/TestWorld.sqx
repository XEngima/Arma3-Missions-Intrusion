/*
 * Name:	TestWorld
 * Date:	2019-05-17
 * Version: 1.0
 * Author:  Engima
 *
 * Description:
 * A fake world class used in testing.
 */

using Intrusion.Ai;
using Intrusion.Common;

namespace Intrusion.Tests.Helpers
{
	public class TestWorld : IWorld
	{
		private fields ["_mResourceLocationCollection" as ResourceLocationCollection, "_mMarkerPositions" as Array /* of DictionaryItem */];
	
		// Creates a TestWorld object.
		public constructor("_resourceLocationCollection" as ResourceLocationCollection) {
			_self.LeaderPos = [];
			_mMarkerPositions = [];
		};
		
		public property Array LeaderPos { get; set; };
		
		// Gets a group's leader's position.
		// _group (Group): The group to get the leader's position from.
		// Returns (Array): The position of the leader.
		public method Array GetLeaderPos("_group" as Group)
		{
			_self.LeaderPos
		};
		
		// Gets the resource location collection.
		// Returns (ResourceLocationCollection): The resource location collection.
		public method ResourceLocationCollection GetResourceLocationCollection()
		{
			_mResourceLocationCollection
		};
		
		public method AddMarkerPos("_markerName" as String, "_pos" as Array)
		{
			_mMarkerPositions pushBack [_markerName, _pos] new DictionaryItem;
		};
		
		// Gets the position of a marker.
		// _markerName (String): The name of the marker.
		// Returns (Array): The position of the marker.
		public method Array GetMarkerPos("_markerName" as String)
		{
			scopeName "main";
			
			{
				if (_x.Key == _markerName) then {
					_x.Value breakOut "main";
				};
			} foreach _mMarkerPositions as DictionaryItem;
			
			[]
		};
	};
};
