/*
 * Name:	TestVehicleSpawner
 * Date:	2018-12-01
 * Version: 1.0
 * Author:  Engima
 *
 * Description:
 * A test vehicle spawner.
 */

using Intrusion.Common;
using Intrusion.Server;

namespace Intrusion.Tests.Helpers
{
	public class TestVehicleSpawner : IVehicleSpawner
	{
		// Creates a TestVehicleSpawner object.
		public constructor {
			_self.SpawnedVehicles = [];
		};
		
		public property Array SpawnedVehicles { get; private set; };
		
		public method IntrusionVehicle SpawnProfessionVehicle("_group" as Group, "_professionType" as ProfessionType, "_vehicleClass" as String, "_cost" as Scalar)
		{
		    private ["_intrusionVehicle" as IntrusionVehicle];
			
			_intrusionVehicle = [objNull, west, _professionType, _group, _cost] new IntrusionVehicle;
			_self.SpawnedVehicles pushBack _vehicleClass;
			
			_intrusionVehicle
		};
		
		public method IntrusionVehicle SpawnFreeVehicle("_side" as Side) {};
		
		public method Scalar CountFreeVehiclesAtBase("_side" as Side) { 0 };
		
		// Deletes a profession vehicle belonging to a group from the map.
		// _group (Group): The group whose vehicle will be deleted.
		// Returns (Scalar): The production cost of the vehicle.
		public method Scalar DeleteProfessionVehicles("_group" as Group) { 100 };
		
		public method Array GetAllVehicles()
		{
			[]
		};
		
		public method PlaceVehicleOnCarPark("_vehicle" as Object, "_side" as Side, ["_pos" as Array, []])
		{
		};
		
		// Removes squad's ownership of all destroyed vehicles.
		public method RemoveOwnershipOfDestroyedVehicles()
		{
		};
		
		// Gets a squad's intrusion vehciels.
		// _group (Group): The group that owns the vehicles.
		// Returns (Array of IntrusionVehicle): A list of the squad's intrusion vehicles.
		public method Array GetIntrusionVehiclesByGroup("_group" as Group)
		{
			[]
		};
		
		// Gets the nearest working empty free vehicle in relation to a position.
		// _side (Side): The vehicle's side.
		// _pos (Array): The relative position.
		// Returns (IntrusionVehicle): The intrusion vehicle closest to the group.
		public method IntrusionVehicle GetNearestEmptyFreeVehicle("_side" as Side, "_pos" as Array)
		{
			classNull
		};
		
		public method Scalar DeleteProfessionVehiclesWithNoOwner("_side" as Side)
		{
		};
	};
};
