/*
 * Name:	TechnologyConfig
 * Date:	2018-12-17
 * Version: 1.0
 * Author:  Engima
 *
 * Description:
 * Class that contains configuration settings for technologies.
 */
namespace Intrusion.Common
{
	public class TechnologyTestConfig : ITechnologyConfig
	{
		private fields ["_mTechnologies" as Array /* of TechnologyInfo */];
		
		// Creates a TechnologyConfig object.
		public constructor {
			_mTechnologies = [
				[Technology.Transport, "Transport", 250] new TechnologyInfo,
				[Technology.Services, "Services", 500] new TechnologyInfo,
				[Technology.Maintenance, "Maintenance", 750] new TechnologyInfo,
				[Technology.Launchers, "Launchers", 1000] new TechnologyInfo,
				[Technology.Artillery, "Artillery", 1250] new TechnologyInfo,
				[Technology.Motorized, "Motorized Vehicles", 1500] new TechnologyInfo,
				[Technology.AntiArmor, "Anti Armor", 1750] new TechnologyInfo,
				[Technology.Mechanized, "Mechanized Vehicles", 2000] new TechnologyInfo,
				[Technology.Armored, "Armored Vehicles", 2250] new TechnologyInfo,
			];
			
			_self.Technologies = +_mTechnologies;
		};
		
		// Gets a copy of all technologies.
		public property Array Technologies { get; private set; };
		
		// Gets a profession vehicle from the list.
		// Returns (ProfessionVehicle): A profession vehicle. classNull if the vehicle type does not exist.
		public method TechnologyInfo GetTechnology("_technology" as Technology) {
			scopeName "main";
			
			{
				if (_technology == _x.Technology) then {
					_x breakOut "main";
				};
			} foreach _mTechnologies as TechnologyInfo;
			
			classNull
		};
		
		// Gets the next technology to investigate.
		// _research (Scalar): The current research points.
		// Returns (TechnologyInfo): The technology currently being researched. classNull if all technologies have been invented.
		public method TechnologyInfo GetNextTechnology("_research" as Scalar)
		{
			scopeName "main";
			
			{
				if (_x.RequiredResearch > _research) then {
					_x breakOut "main";
				};
			} foreach _mTechnologies as TechnologyInfo;
			
			classNull
		};
	};
};
