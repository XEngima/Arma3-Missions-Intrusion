/*
 * Name:	TestWorld
 * Date:	2019-05-17
 * Version: 1.0
 * Author:  Engima
 *
 * Description:
 * A fake world class used in testing.
 */

using Intrusion.Ai;
using Intrusion.Common;
using Intrusion.Server;

namespace Intrusion.Tests.Helpers
{
	public class TestWorld : IWorld
	{
		private fields ["_mResourceLocationCollection" as ResourceLocationCollection];
	
		// Creates a TestWorld object.
		public constructor("_resourceLocationCollection" as ResourceLocationCollection)
		{
			_mResourceLocationCollection = _resourceLocationCollection;
			_self.LeaderPos = [];
			_self.ClosestEmptyFreeVehicle = classNull;
			_self.AllSquadMembersOnBoard = false;
		};
		
		public property Array LeaderPos { get; set; };
		
		// Gets a group's leader's position.
		// _group (Group): The group to get the leader's position from.
		// Returns (Array): The position of the leader.
		public method Array GetLeaderPos("_group" as Group)
		{
			_self.LeaderPos
		};
		
		// Gets the resource location collection.
		// Returns (ResourceLocationCollection): The resource location collection.
		public method ResourceLocationCollection GetResourceLocationCollection()
		{
			_mResourceLocationCollection
		};
		
		public property Boolean SquadPresenceAtResourceLocation { get; set; };
		
		// Checks if a group is inside the perimiters of one or more resource locations.
		// _group (Group): The group to check.
		// _location (ResourceLocation): The resource location to check.
		// Returns (Boolean): true if any squad member is inside the perimiter of the resource location, otherwise false.
		public method Boolean CheckSquadPresenceAtResourceLocation("_group" as Group, "_location" as ResourceLocation)
		{
			_self.SquadPresenceAtResourceLocation
		};
		
		public property AiVehicle ClosestEmptyFreeVehicle { get; set; };

		
		// Gets the closest empty, unassigned, usable and free vehicle that fits the group.
		// _side (Side): Side of the vehicle.
		// _pos (Array): The relative position.
		// _squadSize (Scalar): The number of members in the squad.
		public method AiVehicle GetClosestEmptyFreeVehicle("_side" as Side, "_pos" as Array, "_squadSize" as Scalar)
		{
			_self.ClosestEmptyFreeVehicle
		};
		
		public property Boolean AllSquadMembersOnBoard { get; set; };
		
		// Checks if all squad members are aboard a vehicle.
		// _group (Group): The group to check.
		// Returns (Boolean): true if all members are aboard a vehicle, otherwise false.
		public method Boolean CheckAllSquadMembersOnBoard("_group")
		{
			_self.AllSquadMembersOnBoard
		};
		
		
		// Gets the speed of a vehicle.
		// _vehicle (Object): The vehicle.
		public method Scalar GetSpeed("_vehicle" as Object)
		{
			0
		};
	};
};
