/*
 * Name:	Rank
 * Date:	2019-04-02
 * Version: 1.0
 * Author:  Engima
 *
 * Description:
 * Enum describing all ranks.
 */
namespace Intrusion.Common
{
	public enum Rank
	{
		Private = 0,
		Corpral = 500,
		Sergeant = 1500,
		Lieutenant = 2500,
		Captain = 3500,
		Major = 5000,
		Colonel = 7500
	};
	
	public class RankMeta
	{
		public static method GetRankText("_rank" as Rank)
		{
			private ["_sRank" as String];
			
			switch (_rank) do {
				case Rank.Corpral: { _sRank = "Corpral"; };
				case Rank.Sergeant: { _sRank = "Sergeant"; };
				case Rank.Lieutenant: { _sRank = "Lieutenant"; };
				case Rank.Captain: { _sRank = "Captain"; };
				case Rank.Major: { _sRank = "Major"; };
				case Rank.Colonel: { _sRank = "Colonel"; };
				default { _sRank = "Private"; };
			};
			
			return _sRank;
		};
		
		// Gets the next rank out of a rating value.
		// _rating (Scalar): The unit's rating.
		// Returns (Rank): Next rank. Rank.Private if there is no next rank.
		public static method Rank GetNextRank("_rating" as Scalar)
		{
			private _rank = [_rating] call _self.GetRankByRating;
			
			if (_rank == Rank.Private) then {
				return Rank.Corpral;
			};
			if (_rank == Rank.Corpral) then {
				return Rank.Sergeant;
			};
			if (_rank == Rank.Sergeant) then {
				return Rank.Lieutenant;
			};
			if (_rank == Rank.Lieutenant) then {
				return Rank.Captain;
			};
			if (_rank == Rank.Captain) then {
				return Rank.Major;
			};
			if (_rank == Rank.Major) then {
				return Rank.Colonel;
			};
			
			return Rank.Private;
		};
		
		public static method GetRankByRating("_rating" as Scalar)
		{
		    private ["_rank" as Rank];
		
		    _rank = Rank.Private;
		
		    if (_rating >= (Rank.Corpral as Scalar)) then {
		        _rank = Rank.Corpral;
		    };
		    if (_rating >= (Rank.Sergeant as Scalar)) then {
		        _rank = Rank.Sergeant;
		    };
		    if (_rating >= (Rank.Lieutenant as Scalar)) then {
		        _rank = Rank.Lieutenant;
		    };
		    if (_rating >= (Rank.Captain as Scalar)) then {
		        _rank = Rank.Captain;
		    };
		    if (_rating >= (Rank.Major as Scalar)) then {
		        _rank = Rank.Major;
		    };
		    if (_rating >= (Rank.Colonel as Scalar)) then {
		        _rank = Rank.Colonel;
		    };
		
		    return _rank;
	    };
	};
};
