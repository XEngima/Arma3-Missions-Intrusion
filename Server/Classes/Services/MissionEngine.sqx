/*
 * Name:    MissionEngine
 * Version: 1.0
 * Author:  Engima
 *
 * Description:
 * Executes the mission. Loops through the mission loop that will run from mission start
 * to mission end.
 */
using Intrusion.Common;

namespace Intrusion.Server
{
	public class MissionEngine
	{
        // Runs the mission.
        private static method Run {
        	private ["_sideManagers" as Array];
        	
        	// Start the mission counter.
        	call MissionCounterService.RunAsync;
        	
        	// Start the free vehicles service
        	call FreeVehiclesService.RunAsync;
        	
        	// Start the weapon service
        	call WeaponsService.RunAsync;
        	
        	// Create a side manager for each side.
        	_sideManagers = [];
        	{
        		_sideManagers pushBack [_x] new SideManager;
        	} foreach GameplayConfig.CompetingSides as Side;
        	
			// Perform the mission digest loop
			while { MissionCounterService.MissionIsRunning } do
			{
				{
					private ["_sideManager" as SideManager];
					_sideManager = _x;
					
					call _sideManager.PerformTurn;
				} foreach _sideManagers as SideManager;
				
				sleep 10;
			};
		};
		
		// Starts the mission
		public static method RunAsync {
			[] spawn _self.Run;
		};
	};
};
