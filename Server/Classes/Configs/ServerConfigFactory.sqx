/*
 * Name:	ServerConfigFactory
 * Date:	2019-03-31
 * Version: 1.0
 * Author:  Engima
 *
 * Description:
 * Factory class that assembles all configs valid for the current release configuration.
 */

using Intrusion.Common;

namespace Intrusion.Server
{
	public class ServerConfigFactory
	{
		// Assembles all mission configs valid for the current release configuration.
		// _releaseMode (MissionReleaseMode): The current release mode.
		public static method IServerConfig CreateServerConfig("_releaseMode" as ReleaseMode)
		{
			private ["_serverConfig" as IServerConfig]; // SQX TODO: Complains at return line if _commonConfig is declared as a CommonConfig, but it shouldn't.
			
			if (_releaseMode == ReleaseMode.Production) then {
				_serverConfig = [new GameplayConfig, new ResourceLocationConfig] new ServerConfig;
			}
			else {
				if (_releaseMode == ReleaseMode.Test) then {
					_serverConfig = [new GameplayTestConfig, new ResourceLocationTestConfig] new ServerConfig;
				}
				else { // Dev
					_serverConfig = [new GameplayTestConfig, new ResourceLocationTestConfig] new ServerConfig;
				};
			};
			
			_serverConfig
		};
	};
};
