/*
 * Name:	ProductionQueue
 * Date:	2017-11-19
 * Version: 1.0
 * Author:  Engima
 *
 * Description:
 * A queue for the groups on the side to get needed materiels as soon as the side can afford it.
 */
namespace Intrusion.Server
{
	public class ProductionQueue
	{
		private fields ["_mGroups" as Array, "_mCurrentIndex" as Scalar];
		
		// Creates a ProductionQueue object.
		public constructor {
			_mGroups = [];
			_mCurrentIndex = -1;
			_self.CurrentGroup = grpNull;
		};
		
		// Gets the group currently being built for.
		public property Group CurrentGroup { get; private set; };
		
		// Adds a group to the queue if it is not already in it.
		// _group (Group): The group to add.
		public method AddGroup {
			params ["_group" as Group];
			
			if (!_group in _mGroups) then {
				_mGroups pushBack _group;
			};
			
			if (_mCurrentIndex < 0) then {
				_mCurrentIndex = 0;
			};
		};
		
		// Moves the queue pointer to the next group in the queue.
		// Returns (Group): The group that is the current group after the pointer has moved.
		public method Group NextGroup {
			private _currentIndex = _mCurrentIndex;
		
			if (_currentIndex >= 0) then {
				private _startIndex = _currentIndex;
				private _group = grpNull;
			
				while { isNull _group } do {
					_currentIndex = _currentIndex + 1;
					
					if (_currentIndex >= count _mGroups) then {
						_currentIndex = 0;
					};
					
					_mCurrentIndex = _currentIndex;
					
					_group = _mGroups select _currentIndex;
				};
			};
			
			_self.CurrentGroup
		};
	};
};
