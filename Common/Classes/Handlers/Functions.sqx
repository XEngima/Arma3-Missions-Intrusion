/*9
 * Name:	Functions
 * Date:	2019-03-01
 * Version: 1.0
 * Author:  Engima
 *
 * Description:
 * A common function library.
 */
namespace Intrusion.Common
{
	public class Functions
	{
		// Gets the nearest mine.
		// _pos (Array): The reference position.
		// Returns (Object): The closest mine.
		public static method Object GetNearestMine("_pos" as Array)
		{
			private ["_closestDistance" as Scalar, "_closestMine" as Object, "_closestTripwireMine" as Object];
			
			_closestMine = objNull;
			_closestDistance = 999999999;
			
			{
				if (_x distance _pos < _closestDistance) then {
					_closestMine = _x;
					_closestDistance = _x distance _pos;
				};
			} foreach allMines as Object;
			
			// Tripwires are not found above
			_closestTripwireMine = nearestObject [_pos, "APERSTripMine_Wire_Ammo"];
			if (_pos distance _closestTripwireMine < _closestDistance) then {
				_closestDistance = _pos distance _closestTripwireMine;
				_closestMine = _closestTripwireMine;
			};
			
			_closestMine
		};
		
		// Checks wether a class name is a sub class of a parent class name.
		// _className (String): The class name to test.
		// _parentClassName (String): The parent class name to search for.
		// Returns (Boolean): 
		public static method Boolean ClassNameIsTypeOf("_className" as String, "_parentClassName" as String)
		{
			private ["_config" as Config];
			scopeName "main";
			
			disableSerialization;
			
			_config = (configFile >> "CfgVehicles" >> _className);
			
			if (isClass _config) then
			{
				while { !isNull _config } do
				{
					_config = inheritsFrom _config;
					
					if (configName _config == _parentClassName) then {
						true breakOut "main";
					};
				};
			};
			
			false
		};
	};
};
