call compile preprocessFileLineNumbers "Client\Classes\Objects\Tutorial.sqx";
call compile preprocessFileLineNumbers "Client\Classes\Configs\TutorialConfig.sqx";
call compile preprocessFileLineNumbers "Client\Classes\Dialogs\TutorialDialog.sqx";
call compile preprocessFileLineNumbers "Client\Classes\Dialogs\ProfessionDialog.sqx";
call compile preprocessFileLineNumbers "Client\Classes\Handlers\TutorialHandler.sqx";
call compile preprocessFileLineNumbers "Client\Classes\Handlers\BriefingHandler.sqx";
call compile preprocessFileLineNumbers "Client\Classes\Handlers\GroupActionHandler.sqx";
call compile preprocessFileLineNumbers "Client\Classes\Handlers\ClientMessageHandler.sqx";
call compile preprocessFileLineNumbers "Client\Classes\Handlers\IntrusionMenuHandler.sqx";
call compile preprocessFileLineNumbers "Client\Classes\Handlers\ClientResourceLocationHandler.sqx";
call compile preprocessFileLineNumbers "Client\Classes\Handlers\ClientSquadHandler.sqx";
call compile preprocessFileLineNumbers "Client\Classes\Handlers\MapObservationsHandler.sqx";
call compile preprocessFileLineNumbers "Client\Classes\Handlers\MissionEndHandler.sqx";
call compile preprocessFileLineNumbers "Client\Classes\Handlers\RadioTriggerHandler.sqx";

using Intrusion.Client;

waitUntil { player == player };

// Configs
call TutorialConfig.Init;

// Handlers
call TutorialHandler.Init;
call RadioTriggerHandler.Init;
call IntrusionMenuHandler.Init; // Adds the intrusion menu
call ClientResourceLocationHandler.Init; // Initialize actions on all flags

// Services
call MapObservationsHandler.Init;

// Dialogs
call ProfessionDialog.Init;

// Create the briefing
call BriefingHandler.CreateBriefing;

// Add invite player actions on all possible players
call GroupActionHandler.ResetInvitePlayerActions;

// Show the Welcome tutorial
[TutorialType.Welcome] call TutorialHandler.ShowTutorial;

if (didJIP) then {
	
};
