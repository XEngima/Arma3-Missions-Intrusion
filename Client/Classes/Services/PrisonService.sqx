/*
 * Name:	PrisonService
 * Date:	2019-02-14
 * Version: 1.0
 * Author:  Engima
 *
 * Description:
 * A prison service that is used to warn and punish players that misbehave.
 */

using Intrusion.Common;

namespace Intrusion.Client
{
	public class PrisonService : IService
	{
		private fields ["_mMapMarkersConfig" as IMapMarkersConfig];
		private fields ["_mPrisonTimeMin" as Scalar, "_mPrisonMessage" as String];
	
		// Creates a PrisonService object.
		public constructor("_mapMarkersConfig" as IMapMarkersConfig) {
			_mMapMarkersConfig = _mapMarkersConfig;
			_mPrisonTimeMin = 1;
			_mPrisonMessage = "You are in prison.";
			_self.IsRunning = false;
		};
		
		public property Boolean IsRunning { get; private set; };
		
		private method Run()
		{
			private ["_startTime" as Scalar, "_mapMarkerInfo" as MapMarkerInfo, "_intrusionVehicles" as Array /* of IntrusionVehicle */];
			
			_startTime = time;
			_mapMarkerInfo = [playerSide] call _mMapMarkersConfig.GetMapMarkerInfo;
			
			// Move player to base.
			player setPos getMarkerPos _mapMarkerInfo.BaseMarkerName;
			disableUserInput true;
			
			// If player is alone in a group, then his/her intrusion vehicle should be returned.
			if (count units group player == 1) then {
				_intrusionVehicles = call PublicVariableHandler.GetIntrusionVehicles;
				
			};
			
			while { time < _startTime + _mPrisonTimeMin * 60 } do {
				cutText [_mPrisonMessage, "BLACK FADED"];
				sleep 1;
			};
			
			disableUserInput false;
			_self.IsRunning = false;
		};
		
		public method RunAsync()
		{
			_self.IsRunning = true;
			[] spawn _self.Run;
		};
		
		public method SetImprisonmentTime("_imprisonmentTime" as Scalar)
		{
			_mPrisonTimeMin = _imprisonmentTime;
		};
		
		public method SetPrisonMessage("_message" as String)
		{
			_mPrisonMessage = _message;
		};
	};
};
