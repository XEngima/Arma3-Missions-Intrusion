/*
 * Name:	PlayerInfoCollection
 * Date:	2018-12-25
 * Version: 1.0
 * Author:  Engima
 *
 * Description:
 * A collection of player information.
 */
namespace Intrusion.Common
{
	public class PlayerInfoCollection
	{
		private fields ["_mPlayerInfos" as Array /* of PlayerInfo */];
	
		// Creates a PlayerInfoCollection object.
		public constructor {
			_mPlayerInfos = [];
		};
		
		// Gets player info about a player by UID.
		// _uid (String): The player's UID.
		public method PlayerInfo GetPlayerInfoByUid("_uid" as String)
		{
			scopeName "main";
			
			{
				private ["_playerInfo" as PlayerInfo];
				_playerInfo = _x;
				
				if (_playerInfo.Uid == _uid) then {
					_playerInfo breakOut "main";
				};
			} foreach _mPlayerInfos as PlayerInfo;
			
			classNull
		};
		
		public method AddPlayerInfo("_uid" as String, "_name" as String, "_side" as Side)
		{
			_mPlayerInfos pushBack [_uid, _name, _side] new PlayerInfo;
		};
		
		public method GetPlayerInfos() {
			_mPlayerInfos
		};
		
		public method Boolean SideHasBrigadeLeader("_side" as Side)
		{
			scopeName "main";
		
			{
				if (_x.Side == _side && _x.IsBrigadeLeader) then {
					true breakOut "main";
				};
			} foreach _mPlayerInfos as PlayerInfo;
			
			false
		};
		
		public method Boolean TrySetBrigadeLeader("_playerUid" as String, "_side" as Side)
		{
			private ["_playerIsBrigadeLeader" as Boolean, "_playerInfo" as PlayerInfo];
			
			_playerIsBrigadeLeader = false;
		
			if (!([_side] call _self.SideHasBrigadeLeader)) then {
				_playerInfo = [_playerUid] call _self.GetPlayerInfoByUid;
				_playerInfo.IsBrigadeLeader = true;
				_playerIsBrigadeLeader = true;
			};
			
			_playerIsBrigadeLeader
		};
	};
};
