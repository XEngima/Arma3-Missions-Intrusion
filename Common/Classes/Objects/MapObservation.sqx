/*
 * Name:	MapObservation
 * Date:	2018-10-13
 * Version: 1.0
 * Author:  Engima
 *
 * Description:
 * Models observations made by units on the field. An observation is always mapped to a
 * marker on the map (not necessarily visible to everyone though). MapObservation is an 
 * object that extracts the necessary content from an Observation.
 */
namespace Intrusion.Common
{
	public class MapObservation
	{
		// Creates an Observation object.
		// _id (Scalar): The unique and persistent ID of the observation.
		// _position (Array): The position of the observation.
		// _observingSide (Side): The observing side.
		// _isIdentifiedAsEnemy (Boolean): Whether the target is identified as an enemy or not.
		// _professionType (ProfessionType): The supposed profession type.
		public constructor("_id" as Scalar, "_observingSide" as Side, "_percievedPos" as Array, "_isIdentifiedAsEnemy" as Boolean, "_percievedProfessionType" as ProfessionType, "_isPercieved" as Boolean)
		{
			_self.Id = _id;
			_self.ObservingSide = _observingSide;
			_self.PercievedPos = _percievedPos;
			_self.IsIdentifiedAsEnemy = _isIdentifiedAsEnemy;
			_self.PercievedProfessionType = _percievedProfessionType;
			_self.IsPercieved = _isPercieved;
		};
		
		// Gets the unique and persistent ID of the observation.
		public property Scalar Id { get; private set; };
		
		// Gets the side
		public property Side ObservingSide { get; private set; };
		
		// Gets the position of the observation.
		public property Array PercievedPos { get; set; };
		
		// Gets whether the observation is identified as an enemy or not.
		public property Boolean IsIdentifiedAsEnemy { get; set; };
		
		// Gets or sets the profession type that the observation is assumed to have.
		public property ProfessionType PercievedProfessionType { get; set; };
		
		// Gets or sets whether this observation is currently looked at, or if it is just percieved (recently out of sight).
		public property Boolean IsPercieved { get; set; };
	};
};
