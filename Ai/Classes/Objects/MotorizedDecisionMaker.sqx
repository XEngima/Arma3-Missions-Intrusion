/*
 * Name:	MotorizedDecisionMaker
 * Date:	2019-06-16
 * Version: 1.0
 * Author:  Engima
 *
 * Description:
 * Models the frontal lobe of the brain that is the centre for decision making.
 * This class is inherited by different squad brains with different perspective, like motorized, sharpshooter, air and naval.
 */

using Intrusion.Common;

namespace Intrusion.Ai
{
	public class MotorizedDecisionMaker : VehicularDecisionMaker
	{
		public constructor("_time" as IMissionTime, "_knowledge" as Knowledge, "_actionServiceFactory" as IActionServiceFactory, "_world" as IWorld, "_actionPerformer" as IActionPerformer, "_markerHandler" as IMarkerHandler, "_actionTimeoutConfig" as IActionTimeoutConfig)
		{
			[_time, _knowledge, _actionServiceFactory, _world, _actionPerformer, _markerHandler, _actionTimeoutConfig] call _base.Constructor;
		};
		
		protected override method Boolean CompleteMoveWhenCloseToDestination("_mountedVehicle" as VehicleContainer, "_distanceToTargetPos" as Scalar)
		{
			private ["_moveAction" as MoveAction];
			
			// If acting as a profession squad
			
			if (!isNull _mountedVehicle && { !isNull _mountedVehicle.IntrusionVehicle }) then {
				if (_distanceToTargetPos <= 150) then
				{
					_moveAction = _self.Knowledge.CurrentAction as MoveAction;
					
					if (_moveAction is MoveAction) then {
						if (_moveAction.Behavior != "AWARE") then {
				        	["Completed move #1"] call LogHandler.Debug;
							player sideChat "Completed #1";
							return true;
						};
					};
				};
				
				return false;
			};
			
			return [_mountedVehicle, _distanceToTargetPos] call _base.CompleteMoveWhenCloseToDestination;
		};
	};
};
